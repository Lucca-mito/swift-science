{"interfaceLanguages":{"swift":[{"children":[{"title":"Common probability distributions","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/science\/normaldistribution\/init(mean:standarddeviation:)","title":"init(mean: Statistic, standardDeviation: Statistic)","type":"init"},{"path":"\/documentation\/science\/normaldistribution\/init(mean:variance:)","title":"init(mean: Statistic, variance: Statistic)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/normaldistribution\/mean","title":"let mean: Statistic","type":"property"},{"path":"\/documentation\/science\/normaldistribution\/standarddeviation-1ov7n","title":"let standardDeviation: Statistic","type":"property"},{"path":"\/documentation\/science\/normaldistribution\/variance","title":"let variance: Statistic","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/science\/normaldistribution\/standard","title":"static var standard: NormalDistribution<Statistic>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/normaldistribution\/median-4psq8","title":"var median: Statistic","type":"property"},{"path":"\/documentation\/science\/normaldistribution\/median-5gvmw","title":"var median: Self.Value","type":"property"}],"path":"\/documentation\/science\/normaldistribution\/closedformmedian-implementations","title":"ClosedFormMedian Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/normaldistribution\/bottomonepercent","title":"var bottomOnePercent: Self.Value","type":"property"},{"path":"\/documentation\/science\/normaldistribution\/toponepercent","title":"var topOnePercent: Self.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/normaldistribution\/quantile(_:)","title":"func quantile(Statistic) -> Statistic","type":"method"}],"path":"\/documentation\/science\/normaldistribution\/closedformquantile-implementations","title":"ClosedFormQuantile Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/normaldistribution\/probabilitydensity(at:)","title":"func probabilityDensity(at: Statistic) -> Statistic","type":"method"}],"path":"\/documentation\/science\/normaldistribution\/continuousdistribution-implementations","title":"ContinuousDistribution Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/normaldistribution\/skewness","title":"var skewness: Statistic","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/normaldistribution\/momentgeneratingfunction(_:)","title":"func momentGeneratingFunction(some BinaryInteger) -> Statistic","type":"method"}],"path":"\/documentation\/science\/normaldistribution\/distributionwithmoments-implementations","title":"DistributionWithMoments Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/normaldistribution\/standarddeviation-epnx","title":"var standardDeviation: Self.Statistic","type":"property"}],"path":"\/documentation\/science\/normaldistribution\/distributionwithvariance-implementations","title":"DistributionWithVariance Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/normaldistribution\/modes","title":"var modes: Set<Self.Value>","type":"property"}],"path":"\/documentation\/science\/normaldistribution\/finitemodal-implementations","title":"FiniteModal Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/normaldistribution\/issymmetric","title":"var isSymmetric: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/normaldistribution\/probability(ofatleast:)","title":"func probability(ofAtLeast: Self.Value) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/normaldistribution\/probability(ofatmost:)","title":"func probability(ofAtMost: Statistic) -> Statistic","type":"method"},{"path":"\/documentation\/science\/normaldistribution\/probability(ofexactly:)","title":"func probability(ofExactly: Self.Value) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/normaldistribution\/probability(ofgreaterthan:)","title":"func probability(ofGreaterThan: Self.Value) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/normaldistribution\/probability(ofin:)-1im2a","title":"func probability(ofIn: Range<Self.Value>) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/normaldistribution\/probability(ofin:)-5vkw5","title":"func probability(ofIn: ClosedRange<Self.Value>) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/normaldistribution\/probability(ofin:)-779kg","title":"func probability(ofIn: some Collection<Self.Value>) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/normaldistribution\/probability(oflessthan:)","title":"func probability(ofLessThan: Self.Value) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/normaldistribution\/probability(ofnot:)","title":"func probability(ofNot: Self.Value) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/normaldistribution\/probability(ofwithin:from:)","title":"func probability(ofWithin: Self.Value, from: Self.Value) -> Self.Statistic","type":"method"}],"path":"\/documentation\/science\/normaldistribution\/probabilitydistribution-implementations","title":"ProbabilityDistribution Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/normaldistribution\/sample()","title":"func sample() -> NormalDistribution<Statistic>.Value","type":"method"}],"path":"\/documentation\/science\/normaldistribution\/samplable-implementations","title":"Samplable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/normaldistribution\/mode","title":"var mode: Statistic","type":"property"}],"path":"\/documentation\/science\/normaldistribution\/unimodal-implementations","title":"Unimodal Implementations","type":"symbol"}],"path":"\/documentation\/science\/normaldistribution","title":"NormalDistribution","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/init(probabilityofone:)","title":"init(probabilityOfOne: Statistic)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/probabilityofone","title":"let probabilityOfOne: Statistic","type":"property"},{"path":"\/documentation\/science\/bernoullidistribution\/probabilityofzero","title":"var probabilityOfZero: Statistic","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/fair","title":"static var fair: BernoulliDistribution<Value, Statistic>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/support","title":"var support: Set<Value>","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/domain","title":"static var domain: Set<Value>","type":"property"}],"path":"\/documentation\/science\/bernoullidistribution\/boundeddiscretedistribution-implementations","title":"BoundedDiscreteDistribution Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/max","title":"var max: Value","type":"property"},{"path":"\/documentation\/science\/bernoullidistribution\/range","title":"var range: Self.Value","type":"property"}],"path":"\/documentation\/science\/bernoullidistribution\/boundeddistribution-implementations","title":"BoundedDistribution Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/median","title":"var median: Self.Value","type":"property"}],"path":"\/documentation\/science\/bernoullidistribution\/closedformmedian-implementations","title":"ClosedFormMedian Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/bottomonepercent","title":"var bottomOnePercent: Self.Value","type":"property"},{"path":"\/documentation\/science\/bernoullidistribution\/toponepercent","title":"var topOnePercent: Self.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/quantile(_:)","title":"func quantile(Statistic) -> Value","type":"method"}],"path":"\/documentation\/science\/bernoullidistribution\/closedformquantile-implementations","title":"ClosedFormQuantile Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/mean","title":"var mean: Statistic","type":"property"}],"path":"\/documentation\/science\/bernoullidistribution\/distributionwithmean-implementations","title":"DistributionWithMean Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/skewness","title":"var skewness: Statistic","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/momentgeneratingfunction(_:)","title":"func momentGeneratingFunction(some BinaryInteger) -> Statistic","type":"method"}],"path":"\/documentation\/science\/bernoullidistribution\/distributionwithmoments-implementations","title":"DistributionWithMoments Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/standarddeviation","title":"var standardDeviation: Self.Statistic","type":"property"},{"path":"\/documentation\/science\/bernoullidistribution\/variance","title":"var variance: Statistic","type":"property"}],"path":"\/documentation\/science\/bernoullidistribution\/distributionwithvariance-implementations","title":"DistributionWithVariance Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/modes","title":"var modes: Set<Value>","type":"property"}],"path":"\/documentation\/science\/bernoullidistribution\/finitemodal-implementations","title":"FiniteModal Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/min","title":"var min: Value","type":"property"}],"path":"\/documentation\/science\/bernoullidistribution\/lowerboundeddistribution-implementations","title":"LowerBoundedDistribution Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/issymmetric","title":"var isSymmetric: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/probability(ofatleast:)","title":"func probability(ofAtLeast: Self.Value) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/bernoullidistribution\/probability(ofatmost:)","title":"func probability(ofAtMost: Value) -> Statistic","type":"method"},{"path":"\/documentation\/science\/bernoullidistribution\/probability(ofexactly:)","title":"func probability(ofExactly: Value) -> Statistic","type":"method"},{"path":"\/documentation\/science\/bernoullidistribution\/probability(ofgreaterthan:)","title":"func probability(ofGreaterThan: Self.Value) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/bernoullidistribution\/probability(ofin:)-11v92","title":"func probability(ofIn: ClosedRange<Self.Value>) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/bernoullidistribution\/probability(ofin:)-1o11i","title":"func probability(ofIn: Range<Self.Value>) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/bernoullidistribution\/probability(ofin:)-8ec1f","title":"func probability(ofIn: some Collection<Self.Value>) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/bernoullidistribution\/probability(oflessthan:)","title":"func probability(ofLessThan: Self.Value) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/bernoullidistribution\/probability(ofnot:)","title":"func probability(ofNot: Self.Value) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/bernoullidistribution\/probability(ofwithin:from:)","title":"func probability(ofWithin: Self.Value, from: Self.Value) -> Self.Statistic","type":"method"}],"path":"\/documentation\/science\/bernoullidistribution\/probabilitydistribution-implementations","title":"ProbabilityDistribution Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/bernoullidistribution\/sample()","title":"func sample() -> Value","type":"method"}],"path":"\/documentation\/science\/bernoullidistribution\/samplable-implementations","title":"Samplable Implementations","type":"symbol"}],"path":"\/documentation\/science\/bernoullidistribution","title":"BernoulliDistribution","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/science\/poissondistribution\/init(rate:)","title":"init(rate: Statistic)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/poissondistribution\/rate","title":"let rate: Statistic","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/poissondistribution\/mean","title":"var mean: Statistic","type":"property"}],"path":"\/documentation\/science\/poissondistribution\/distributionwithmean-implementations","title":"DistributionWithMean Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/poissondistribution\/skewness","title":"var skewness: Statistic","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/poissondistribution\/momentgeneratingfunction(_:)","title":"func momentGeneratingFunction(some BinaryInteger) -> Statistic","type":"method"}],"path":"\/documentation\/science\/poissondistribution\/distributionwithmoments-implementations","title":"DistributionWithMoments Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/poissondistribution\/standarddeviation","title":"var standardDeviation: Self.Statistic","type":"property"},{"path":"\/documentation\/science\/poissondistribution\/variance","title":"var variance: Statistic","type":"property"}],"path":"\/documentation\/science\/poissondistribution\/distributionwithvariance-implementations","title":"DistributionWithVariance Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/poissondistribution\/modes","title":"var modes: Set<Value>","type":"property"}],"path":"\/documentation\/science\/poissondistribution\/finitemodal-implementations","title":"FiniteModal Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/poissondistribution\/min","title":"var min: Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/poissondistribution\/probability(ofatmost:)","title":"func probability(ofAtMost: Self.Value) -> Self.Statistic","type":"method"}],"path":"\/documentation\/science\/poissondistribution\/lowerboundeddistribution-implementations","title":"LowerBoundedDistribution Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/poissondistribution\/issymmetric","title":"var isSymmetric: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/poissondistribution\/probability(ofatleast:)","title":"func probability(ofAtLeast: Self.Value) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/poissondistribution\/probability(ofexactly:)","title":"func probability(ofExactly: Value) -> Statistic","type":"method"},{"path":"\/documentation\/science\/poissondistribution\/probability(ofgreaterthan:)","title":"func probability(ofGreaterThan: Self.Value) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/poissondistribution\/probability(ofin:)-26trm","title":"func probability(ofIn: some Collection<Self.Value>) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/poissondistribution\/probability(ofin:)-8uy7i","title":"func probability(ofIn: Range<Self.Value>) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/poissondistribution\/probability(ofin:)-96e3y","title":"func probability(ofIn: ClosedRange<Self.Value>) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/poissondistribution\/probability(oflessthan:)","title":"func probability(ofLessThan: Self.Value) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/poissondistribution\/probability(ofnot:)","title":"func probability(ofNot: Self.Value) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/poissondistribution\/probability(ofwithin:from:)","title":"func probability(ofWithin: Self.Value, from: Self.Value) -> Self.Statistic","type":"method"}],"path":"\/documentation\/science\/poissondistribution\/probabilitydistribution-implementations","title":"ProbabilityDistribution Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/poissondistribution\/sample()","title":"func sample() -> Value","type":"method"},{"path":"\/documentation\/science\/poissondistribution\/sample(count:)","title":"func sample(count: Int) -> [Self.Value]","type":"method"}],"path":"\/documentation\/science\/poissondistribution\/samplable-implementations","title":"Samplable Implementations","type":"symbol"}],"path":"\/documentation\/science\/poissondistribution","title":"PoissonDistribution","type":"struct"},{"title":"Probability distribution protocols: top-level","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/science\/probabilitydistribution\/statistic","title":"Statistic","type":"associatedtype"},{"path":"\/documentation\/science\/probabilitydistribution\/value","title":"Value","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/probabilitydistribution\/issymmetric","title":"var isSymmetric: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/probabilitydistribution\/probability(ofatleast:)","title":"func probability(ofAtLeast: Self.Value) -> Self.Statistic","type":"method"},{"children":[{"children":[{"path":"\/documentation\/science\/lowerboundeddistribution\/probability(ofatmost:)","title":"func probability(ofAtMost: Self.Value) -> Self.Statistic","type":"method"}],"title":"LowerBoundedDistribution Implementations","type":"groupMarker"}],"path":"\/documentation\/science\/probabilitydistribution\/probability(ofatmost:)","title":"func probability(ofAtMost: Self.Value) -> Self.Statistic","type":"method"},{"children":[{"children":[{"path":"\/documentation\/science\/continuousdistribution\/probability(ofexactly:)","title":"func probability(ofExactly: Self.Value) -> Self.Statistic","type":"method"}],"title":"ContinuousDistribution Implementations","type":"groupMarker"}],"path":"\/documentation\/science\/probabilitydistribution\/probability(ofexactly:)","title":"func probability(ofExactly: Self.Value) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/probabilitydistribution\/probability(ofgreaterthan:)","title":"func probability(ofGreaterThan: Self.Value) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/probabilitydistribution\/probability(ofin:)-21qec","title":"func probability(ofIn: Range<Self.Value>) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/probabilitydistribution\/probability(ofin:)-3m63a","title":"func probability(ofIn: some Collection<Self.Value>) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/probabilitydistribution\/probability(ofin:)-6rvii","title":"func probability(ofIn: ClosedRange<Self.Value>) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/probabilitydistribution\/probability(oflessthan:)","title":"func probability(ofLessThan: Self.Value) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/probabilitydistribution\/probability(ofnot:)","title":"func probability(ofNot: Self.Value) -> Self.Statistic","type":"method"},{"path":"\/documentation\/science\/probabilitydistribution\/probability(ofwithin:from:)","title":"func probability(ofWithin: Self.Value, from: Self.Value) -> Self.Statistic","type":"method"}],"path":"\/documentation\/science\/probabilitydistribution","title":"ProbabilityDistribution","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/samplable\/sample()","title":"func sample() -> Self.Value","type":"method"},{"path":"\/documentation\/science\/samplable\/sample(count:)","title":"func sample(count: Int) -> [Self.Value]","type":"method"}],"path":"\/documentation\/science\/samplable","title":"Samplable","type":"protocol"},{"title":"Probability distribution protocols: by continuity","type":"groupMarker"},{"path":"\/documentation\/science\/discretedistribution","title":"DiscreteDistribution","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/continuousdistribution\/probabilitydensity(at:)","title":"func probabilityDensity(at: Self.Value) -> Self.Statistic","type":"method"}],"path":"\/documentation\/science\/continuousdistribution","title":"ContinuousDistribution","type":"protocol"},{"title":"Probability distribution protocols: by moments","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/distributionwithmean\/mean","title":"var mean: Self.Statistic","type":"property"}],"path":"\/documentation\/science\/distributionwithmean","title":"DistributionWithMean","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/science\/distributionwithvariance\/standarddeviation-2l5m8","title":"var standardDeviation: Self.Statistic","type":"property"}],"title":"DistributionWithVariance Implementations","type":"groupMarker"}],"path":"\/documentation\/science\/distributionwithvariance\/standarddeviation-8rhuz","title":"var standardDeviation: Self.Statistic","type":"property"},{"path":"\/documentation\/science\/distributionwithvariance\/variance","title":"var variance: Self.Statistic","type":"property"}],"path":"\/documentation\/science\/distributionwithvariance","title":"DistributionWithVariance","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/distributionwithmoments\/skewness","title":"var skewness: Self.Statistic","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/distributionwithmoments\/momentgeneratingfunction(_:)","title":"func momentGeneratingFunction(some BinaryInteger) -> Self.Statistic","type":"method"}],"path":"\/documentation\/science\/distributionwithmoments","title":"DistributionWithMoments","type":"protocol"},{"title":"Probability distribution protocols: by quantiles","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/science\/closedformquantile\/median","title":"var median: Self.Value","type":"property"}],"title":"ClosedFormQuantile Implementations","type":"groupMarker"}],"path":"\/documentation\/science\/closedformmedian\/median","title":"var median: Self.Value","type":"property"}],"path":"\/documentation\/science\/closedformmedian","title":"ClosedFormMedian","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/closedformquantile\/bottomonepercent","title":"var bottomOnePercent: Self.Value","type":"property"},{"path":"\/documentation\/science\/closedformquantile\/toponepercent","title":"var topOnePercent: Self.Value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/closedformquantile\/quantile(_:)","title":"func quantile(Self.Statistic) -> Self.Value","type":"method"},{"path":"\/documentation\/science\/closedformquantile\/sample()","title":"func sample() -> Self.Value","type":"method"}],"path":"\/documentation\/science\/closedformquantile","title":"ClosedFormQuantile","type":"protocol"},{"title":"Probability distribution protocols: by modality","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/science\/unimodal\/modes","title":"var modes: Set<Self.Value>","type":"property"}],"title":"Unimodal Implementations","type":"groupMarker"}],"path":"\/documentation\/science\/finitemodal\/modes","title":"var modes: Set<Self.Value>","type":"property"}],"path":"\/documentation\/science\/finitemodal","title":"FiniteModal","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/unimodal\/mode","title":"var mode: Self.Value","type":"property"}],"path":"\/documentation\/science\/unimodal","title":"Unimodal","type":"protocol"},{"title":"Probability distribution protocols: by boundedness","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/lowerboundeddistribution\/min","title":"var min: Self.Value","type":"property"}],"path":"\/documentation\/science\/lowerboundeddistribution","title":"LowerBoundedDistribution","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/boundeddistribution\/max","title":"var max: Self.Value","type":"property"},{"path":"\/documentation\/science\/boundeddistribution\/range","title":"var range: Self.Value","type":"property"}],"path":"\/documentation\/science\/boundeddistribution","title":"BoundedDistribution","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/science\/boundeddiscretedistribution\/support","title":"var support: Set<Self.Value>","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/science\/boundeddiscretedistribution\/domain","title":"static var domain: Set<Self.Value>","type":"property"}],"path":"\/documentation\/science\/boundeddiscretedistribution","title":"BoundedDiscreteDistribution","type":"protocol"},{"title":"Hypothesis tests","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/science\/hypothesistest\/init(teststatistic:criticalvalue:pvalue:)","title":"init(testStatistic: ([DataType]) -> Double, criticalValue: (ProbabilityOfTypeIError, Int) -> Double, pValue: ([DataType]) -> ProbabilityOfTypeIError)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/hypothesistest\/pvalue(for:)","title":"func pValue(for: [DataType]) -> Double","type":"method"},{"path":"\/documentation\/science\/hypothesistest\/test(on:atlevel:)","title":"func test(on: [DataType], atLevel: ProbabilityOfTypeIError) -> HypothesisTest<DataType>.Outcome","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/science\/hypothesistest\/outcome\/failtoreject","title":"case failToReject","type":"case"},{"path":"\/documentation\/science\/hypothesistest\/outcome\/reject","title":"case reject","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/science\/hypothesistest\/outcome\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/science\/hypothesistest\/outcome\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/science\/hypothesistest\/outcome","title":"HypothesisTest.Outcome","type":"enum"}],"path":"\/documentation\/science\/hypothesistest","title":"HypothesisTest","type":"struct"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/waldtest\/domeansdiffer(by:)","title":"static func doMeansDiffer(by: Double) -> HypothesisTest<(Double, Double)>","type":"method"},{"path":"\/documentation\/science\/waldtest\/doesmeanequal(_:)","title":"static func doesMeanEqual(Double) -> HypothesisTest<Double>","type":"method"},{"path":"\/documentation\/science\/waldtest\/general(parameterestimator:parametervalueundernullhypothesis:standarderrorestimator:)","title":"static func general<DataType>(parameterEstimator: ([DataType]) -> Double, parameterValueUnderNullHypothesis: Double, standardErrorEstimator: ([DataType]) -> Double) -> HypothesisTest<DataType>","type":"method"}],"path":"\/documentation\/science\/waldtest","title":"WaldTest","type":"enum"},{"title":"Probabilities used in hypothesis testing","type":"groupMarker"},{"path":"\/documentation\/science\/probabilityoftypeierror","title":"ProbabilityOfTypeIError","type":"typealias"},{"path":"\/documentation\/science\/swift\/double\/lowprobability","title":"static let lowProbability: ProbabilityOfTypeIError","type":"property"},{"path":"\/documentation\/science\/swift\/double\/verylowprobability","title":"static let veryLowProbability: ProbabilityOfTypeIError","type":"property"},{"title":"Metric spaces","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/science\/metricspace\/stride","title":"Stride","type":"associatedtype"},{"title":"Type Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/science\/metricspace\/distance(between:and:)-8rqqt","title":"static func distance(between: Self, and: Self) -> Self.Stride","type":"method"}],"title":"MetricSpace Implementations","type":"groupMarker"}],"path":"\/documentation\/science\/metricspace\/distance(between:and:)-3rp36","title":"static func distance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/metricspace","title":"MetricSpace","type":"protocol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/science\/euclidean\/squareddistance(between:and:)-1m2k9","title":"static func squaredDistance(between: Self, and: Self) -> Self.Stride","type":"method"}],"title":"Euclidean Implementations","type":"groupMarker"}],"path":"\/documentation\/science\/euclidean\/squareddistance(between:and:)-4px6m","title":"static func squaredDistance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/euclidean","title":"Euclidean","type":"protocol"},{"title":"Numerical utilities","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/science\/integerapproximable\/init(_:)","title":"init(some BinaryInteger)","type":"init"}],"path":"\/documentation\/science\/integerapproximable","title":"IntegerApproximable","type":"protocol"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/complexmodule\/complex\/squareddistance(between:and:)","title":"static func squaredDistance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/complexmodule\/complex\/euclidean-implementations","title":"Euclidean Implementations","type":"symbol"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/science\/complexmodule\/complex\/stride","title":"Complex.Stride","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/complexmodule\/complex\/distance(between:and:)","title":"static func distance(between: Complex<RealType>, and: Complex<RealType>) -> RealType","type":"method"}],"path":"\/documentation\/science\/complexmodule\/complex\/metricspace-implementations","title":"MetricSpace Implementations","type":"symbol"}],"path":"\/documentation\/science\/complexmodule\/complex","title":"Complex","type":"extension"}],"path":"\/documentation\/science\/complexmodule","title":"ComplexModule","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/collection\/differenceofmeans()","title":"func differenceOfMeans() -> Double","type":"method"},{"path":"\/documentation\/science\/swift\/collection\/mean()-1wqfe","title":"func mean<FloatingPointType>() -> FloatingPointType","type":"method"},{"path":"\/documentation\/science\/swift\/collection\/mean()-7sjaa","title":"func mean() -> Self.Element","type":"method"},{"path":"\/documentation\/science\/swift\/collection\/populationvariance()-4hjm0","title":"func populationVariance<FloatingPointType>() -> FloatingPointType","type":"method"},{"path":"\/documentation\/science\/swift\/collection\/populationvariance()-8a37g","title":"func populationVariance() -> Self.Element.Stride","type":"method"},{"path":"\/documentation\/science\/swift\/collection\/samplevariance()-6p8c3","title":"func sampleVariance<FloatingPointType>() -> FloatingPointType","type":"method"},{"path":"\/documentation\/science\/swift\/collection\/samplevariance()-8drqq","title":"func sampleVariance() -> Self.Element.Stride","type":"method"},{"path":"\/documentation\/science\/swift\/collection\/squareddeviations()","title":"func squaredDeviations() -> [Self.Element.Stride]","type":"method"},{"path":"\/documentation\/science\/swift\/collection\/sum()","title":"func sum() -> Self.Element","type":"method"}],"path":"\/documentation\/science\/swift\/collection","title":"Collection","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/double\/squareddistance(between:and:)","title":"static func squaredDistance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/double\/euclidean-implementations","title":"Euclidean Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/double\/distance(between:and:)","title":"static func distance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/double\/metricspace-implementations","title":"MetricSpace Implementations","type":"symbol"}],"path":"\/documentation\/science\/swift\/double","title":"Double","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/float\/squareddistance(between:and:)","title":"static func squaredDistance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/float\/euclidean-implementations","title":"Euclidean Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/float\/distance(between:and:)","title":"static func distance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/float\/metricspace-implementations","title":"MetricSpace Implementations","type":"symbol"}],"path":"\/documentation\/science\/swift\/float","title":"Float","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/int\/squareddistance(between:and:)","title":"static func squaredDistance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/int\/euclidean-implementations","title":"Euclidean Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/int\/distance(between:and:)","title":"static func distance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/int\/metricspace-implementations","title":"MetricSpace Implementations","type":"symbol"}],"path":"\/documentation\/science\/swift\/int","title":"Int","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/int16\/squareddistance(between:and:)","title":"static func squaredDistance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/int16\/euclidean-implementations","title":"Euclidean Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/int16\/distance(between:and:)","title":"static func distance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/int16\/metricspace-implementations","title":"MetricSpace Implementations","type":"symbol"}],"path":"\/documentation\/science\/swift\/int16","title":"Int16","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/int32\/squareddistance(between:and:)","title":"static func squaredDistance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/int32\/euclidean-implementations","title":"Euclidean Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/int32\/distance(between:and:)","title":"static func distance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/int32\/metricspace-implementations","title":"MetricSpace Implementations","type":"symbol"}],"path":"\/documentation\/science\/swift\/int32","title":"Int32","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/int64\/squareddistance(between:and:)","title":"static func squaredDistance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/int64\/euclidean-implementations","title":"Euclidean Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/int64\/distance(between:and:)","title":"static func distance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/int64\/metricspace-implementations","title":"MetricSpace Implementations","type":"symbol"}],"path":"\/documentation\/science\/swift\/int64","title":"Int64","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/int8\/squareddistance(between:and:)","title":"static func squaredDistance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/int8\/euclidean-implementations","title":"Euclidean Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/int8\/distance(between:and:)","title":"static func distance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/int8\/metricspace-implementations","title":"MetricSpace Implementations","type":"symbol"}],"path":"\/documentation\/science\/swift\/int8","title":"Int8","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/uint\/squareddistance(between:and:)","title":"static func squaredDistance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/uint\/euclidean-implementations","title":"Euclidean Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/uint\/distance(between:and:)","title":"static func distance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/uint\/metricspace-implementations","title":"MetricSpace Implementations","type":"symbol"}],"path":"\/documentation\/science\/swift\/uint","title":"UInt","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/uint16\/squareddistance(between:and:)","title":"static func squaredDistance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/uint16\/euclidean-implementations","title":"Euclidean Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/uint16\/distance(between:and:)","title":"static func distance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/uint16\/metricspace-implementations","title":"MetricSpace Implementations","type":"symbol"}],"path":"\/documentation\/science\/swift\/uint16","title":"UInt16","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/uint32\/squareddistance(between:and:)","title":"static func squaredDistance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/uint32\/euclidean-implementations","title":"Euclidean Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/uint32\/distance(between:and:)","title":"static func distance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/uint32\/metricspace-implementations","title":"MetricSpace Implementations","type":"symbol"}],"path":"\/documentation\/science\/swift\/uint32","title":"UInt32","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/uint64\/squareddistance(between:and:)","title":"static func squaredDistance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/uint64\/euclidean-implementations","title":"Euclidean Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/uint64\/distance(between:and:)","title":"static func distance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/uint64\/metricspace-implementations","title":"MetricSpace Implementations","type":"symbol"}],"path":"\/documentation\/science\/swift\/uint64","title":"UInt64","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/uint8\/squareddistance(between:and:)","title":"static func squaredDistance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/uint8\/euclidean-implementations","title":"Euclidean Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/science\/swift\/uint8\/distance(between:and:)","title":"static func distance(between: Self, and: Self) -> Self.Stride","type":"method"}],"path":"\/documentation\/science\/swift\/uint8\/metricspace-implementations","title":"MetricSpace Implementations","type":"symbol"}],"path":"\/documentation\/science\/swift\/uint8","title":"UInt8","type":"extension"}],"path":"\/documentation\/science\/swift","title":"Swift","type":"extension"}],"icon":"swift-science-icon.png","path":"\/documentation\/science","title":"Swift Science","type":"module"}]},"references":{"swift-science-icon.png":{"alt":"A technology icon representing the Swift Science framework.","identifier":"swift-science-icon.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/swift-science-icon.png"}]}},"schemaVersion":{"major":0,"minor":1,"patch":1}}